import * as _ from 'radash';
import { omitBy, isUndefined } from 'lodash';
const linearToTheiaDict = {
    'editor.background': 'bgBase',
    'editor.foreground': 'labelBase',
    'editor.inactiveSelectionBackground': 'bgSub',
    'editorIndentGuide.background': 'bgShade',
    'editorIndentGuide.activeBackground': '',
    'editor.selectionHighlightBackground': 'labelBase',
    'list.dropBackground': 'cmdBg',
    'activityBarBadge.background': 'controlBase',
    'sideBarTitle.foreground': '',
    'input.placeholderForeground': '',
    'menu.background': 'cmdBg',
    'menu.foreground': 'labelBase',
    'menu.border': 'bgBorder',
    'statusBarItem.remoteForeground': '',
    'statusBarItem.remoteBackground': '',
    'ports.iconRunningProcessForeground': '',
    'sideBarSectionHeader.background': '',
    'sideBarSectionHeader.border': '',
    'tab.lastPinnedBorder': '',
    'list.activeSelectionIconForeground': '',
    'selection.background': 'bgSelected',
    'icon.foreground': 'labelFaint',
    'button.background': 'controlBaseHighlight',
    'activityBar.background': 'bgSub',
    'activityBar.foreground': 'labelBase',
    'activityBar.broder': 'bgBorder',
    // "activityBarBadge.background": "",
    'sideBar.background': 'bgSub',
    // "sideBarSectionHeader.background": "bgSub",
    'list.activeSelectionBackground': 'bgSelected',
    'list.activeSelectionForeground': 'controlSecondaryLabel',
    'list.inactiveSelectionBackground': 'bgSelected',
    'list.hoverBackground': 'bgSelectedHover',
    'list.errorForeground': '',
    'list.warningForeground': '',
    'list.highlightForeground': 'controlBase',
    'editorGroup.border': '',
    'editorGroupHeader.tabsBackground': 'bgSub',
    'tab.inactiveBackground': 'controlSecondary',
    'tab.border': 'bgBorderThin',
    'tab.activeModifiedBorder': 'bgBorderHover',
    'statusBar.foreground': 'labelMuted',
    'statusBar.background': 'bgSub',
    'statusBar.noFolderBackground': 'bgSub',
    'panelTitle.activeForeground': '',
    'titleBar.activeForeground': 'labelMuted',
    'titleBar.activeBackground': 'bgSub',
    'menu.separatorBackground': '',
    'dropdown.background': 'inputBackground',
    'dropdown.foreground': '',
    'settings.headerForeground': '',
    'toolbar.hoverBackground': '',
    'variable.name.color': '',
    'variable.number.variable.color': '',
    'variable.boolean.variable.color': '',
    'variable.string.variable.color': '',
    'ansi.black.color': '',
    'ansi.red.color': '',
    'ansi.green.color': '',
    'ansi.yellow.color': '',
    'ansi.blue.color': '',
    'ansi.magenta.color': '',
    'ansi.cyan.color': '',
    'ansi.white.color': '',
    'editorGutter.commentRangeForeground': '',
    focusBorder: 'bgBorderHover',
    'input.background': 'inputBackground',
    'textLink.foreground': 'labelLink',
    'scrollbar.shadow': '',
    'scrollbarSlider.background': 'scrollbarBg',
    'scrollbarSlider.hoverBackground': 'scrollbarBgHover',
    'scrollbarSlider.activeBackground': 'scrollbarBgActive',
    'list.focusHighlightForeground': 'controlBaseHighlight',
    'pickerGroup.foreground': 'controlBase',
    'quickInput.background': 'bgBase',
    'tree.indentGuidesStroke': 'bgBorderSolid',
    'tree.inactiveIndentGuidesStroke': 'bgBorderSolid',
};
export function createTheiaThemeColors(theiaColor, linearColor) {
    const ret = omitBy(_.mapValues(linearToTheiaDict, v => {
        if (v === '')
            return theiaColor[v];
        return linearColor[v];
    }), isUndefined);
    return ret;
}
//# sourceMappingURL=linear-theme-util.js.map